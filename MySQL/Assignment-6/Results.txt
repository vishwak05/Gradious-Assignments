1. Filtering records for the year of 2023:
      customer_id  amount     transaction_date
0            89.0     205  2023-07-20 00:00:00
1            53.0     137  2023-07-01 00:00:00
2            88.0     171  2023-07-23 00:00:00
3            35.0     279  2023-10-23 00:00:00
4            34.0     466  2023-04-13 00:00:00
...           ...     ...                  ...
1145         31.0     393  2023-10-31 00:00:00
1146          2.0     269  2023-08-29 00:00:00
1147         40.0     385  2023-01-27 00:00:00
1148         19.0     375  2023-06-21 00:00:00
1149         76.0     102  2023-10-06 00:00:00

[1150 rows x 3 columns]

2. Calculating the total amount spent per customer:
    customer_id  total_spent
0           1.0         4947
1           2.0         4321
2           3.0         1270
3           4.0         3229
4           5.0         1560
..          ...          ...
95         96.0         4618
96         97.0         2609
97         98.0         1823
98         99.0         2000
99        100.0         3653

[100 rows x 2 columns]

3. Printing results sorted by total spending in descending order:
    customer_id  total_spent     transaction_date
0          66.0         6894  2023-11-01 00:00:00
1          67.0         6099  2023-04-17 00:00:00
2          72.0         5937  2023-08-20 00:00:00
3          70.0         5679  2023-02-12 00:00:00
4          85.0         5163  2023-06-03 00:00:00
..          ...          ...                  ...
95         53.0         1433  2023-07-01 00:00:00
96          3.0         1270  2023-07-02 00:00:00
97         92.0         1260  2023-05-08 00:00:00
98         12.0         1199  2023-02-14 00:00:00
99         58.0          782  2023-09-26 00:00:00

[100 rows x 3 columns]

4. Calculating average spending per customer for each month in the year 2023:
     customer_id year_month  avg_monthly_spent
0            1.0    2023-01         276.000000
1            1.0    2023-03         331.000000
2            1.0    2023-04         372.333333
3            1.0    2023-05         160.000000
4            1.0    2023-06         387.000000
..           ...        ...                ...
674        100.0    2023-04         390.333333
675        100.0    2023-06         375.000000
676        100.0    2023-08         288.666667
677        100.0    2023-09         286.000000
678        100.0    2023-11         482.000000

[679 rows x 3 columns]

5. Identifying customer with highest total spending and customer with lowest total spending:
The customer with highest spending is:
   customer_id  total_spent
0         66.0         6894
The customer with lowest spending is:
   customer_id  total_spent
0         58.0          782